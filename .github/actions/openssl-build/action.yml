name: openssl-build
description: 'Build openssl'
inputs:
  arch:
    description: 'Architecture'
    default: ''
    required: false
    type: string
  id:
    description: 'Identification'
    default: ''
    required: false
    type: string
runs:
  using: composite
  steps:
    - name: Build (x86)
      if: inputs.arch == 'x86' && inputs.id == 'latest'
      working-directory: openssl/current
      run: |
        set PATH=%PATH%;${{github.workspace}}\tools\jom;${{github.workspace}}\tools\nasm

        perl Configure VC-WIN32 zlib-dynamic --with-zlib-include=${{github.workspace}}\zlib\current ${{env.OPENSSL_EXTRA_BUILD_FLAGS}}
        REM The linker by default marks the subsystem version too high for XP
        REM and there isn't a way to fix that from the configure script, so
        REM do it the hard way.
        sed -i "s/subsystem:console/subsystem:console,5.01/g" makefile

        ${{env.OPENSSL_MAKE}}
      shell: cmd
    - name: Build (x86, PSDK71)
      if: inputs.arch == 'x86' && inputs.id == 'psdk71'
      working-directory: openssl/current
      run: |
        set PlatformToolset=100

        call ${{ github.workspace }}\vc10.cmd /release /xp /${{ inputs.arch }}

        set PATH=%PATH%;${{github.workspace}}\tools\nasm
          
        perl Configure VC-WIN32 -D"_WIN32_WINNT=0x502"

        nmake
      shell: bash       
    - name: Build (x86, VCT2003)
      if: inputs.arch == 'x86' && inputs.id == 'vct2003'
      working-directory: openssl/current
      run: |
        Set PATH=${{ github.workspace }}\vct2003\bin;%PATH%;${{github.workspace}}\tools\nasm
          
        REM Don't want to pick up headers or libraries from Visual C++ 14.0
        REM which is also on here - we only want it for cvtres.exe.
        set INCLUDE=${{ github.workspace }}\vct2003\include
        set LIB=${{ github.workspace }}\vct2003\lib;%LIB%

        perl Configure VC-WIN32 enable-static-engine
        call ms\do_ms.bat
        REM adjust the makefile to statically link
        sed -i "s/\/MD /\/MT /g" ms\ntdll.mak

        nmake -f ms\ntdll.mak
    - name: Build (x64)
      if: inputs.arch == 'x64' && inputs.id == 'latest'
      working-directory: openssl/current
      run: |
        set PATH=%PATH%;${{github.workspace}}\tools\jom;${{github.workspace}}\tools\nasm

        perl Configure VC-WIN64A zlib-dynamic --with-zlib-include=${{github.workspace}}\zlib\current ${{env.OPENSSL_EXTRA_BUILD_FLAGS}}
        REM The linker by default marks the subsystem version too high for XP
        REM and there isn't a way to fix that from the configure script, so
        REM do it the hard way.
        sed -i "s/subsystem:console/subsystem:console,5.01/g" makefile

        ${{env.OPENSSL_MAKE}}
      shell: cmd
    - name: Build (x64, Mingw)
      if: inputs.arch == 'x64' && inputs.id == 'mingw'
      env:
        CXX: /usr/bin/x86_64-w64-mingw32-c++
        CC: /usr/bin/x86_64-w64-mingw32-gcc
        RC: /usr/bin/x86_64-w64-mingw32-windres
      working-directory: openssl/current
      run: |
        perl Configure mingw64
        make depend
        make -j 2
      shell: bash
    - name: Build (x64, PSDK71)
      if: inputs.arch == 'x64' && inputs.id == 'psdk71'
      working-directory: openssl/current
      run: |
        set PlatformToolset=100

        call ${{ github.workspace }}\vc10.cmd /release /xp /${{ inputs.arch }}

        set PATH=%PATH%;${{github.workspace}}\tools\nasm

        perl Configure VC-WIN64A -D"_WIN32_WINNT=0x502"
        REM The perl configure script doesn't work quite right for cross-compiling to X64
        REM it leaves the /machine flag off the link flags, so we'll just add it on ourselves.
        sed -i "s/^LDFLAGS=\/nologo.*/& \/machine:x64/g" makefile

        nmake
      shell: bash       
    - name: Build (ia64, PSDK71)
      if: inputs.arch == 'ia64' && inputs.id == 'psdk71'
      working-directory: openssl/current
      run: |
        set PlatformToolset=100

        call ${{ github.workspace }}\vc10.cmd /release /xp /${{ inputs.arch }}

        perl Configure VC-WIN64I -D"_WIN32_WINNT=0x502"
        REM The perl configure script doesn't work quite right for cross-compiling to IA64
        REM it leaves the /machine flag off the link flags, so we'll just add it on ourselves.
        sed -i "s/^LDFLAGS=\/nologo.*/& \/machine:ia64/g" makefile

        nmake
      shell: cmd
    - name: Build (x64_arm)
      if: inputs.arch == 'x64_arm' && inputs.id == 'latest'
      working-directory: openssl/current
      run: |
        set PATH=%PATH%;${{github.workspace}}\tools\jom;${{github.workspace}}\tools\nasm

        perl Configure VC-WIN32-ARM zlib-dynamic --with-zlib-include=${{github.workspace}}\zlib\current ${{env.OPENSSL_EXTRA_BUILD_FLAGS}} 

        ${{env.OPENSSL_MAKE}}
      shell: cmd
    - name: Build (x64_arm64)
      if: inputs.arch == 'x64_arm64' && inputs.id == 'latest'
      working-directory: openssl/current
      run: |
        set PATH=%PATH%;${{github.workspace}}\tools\jom;${{github.workspace}}\tools\nasm

        perl Configure VC-WIN64-ARM zlib-dynamic --with-zlib-include=${{github.workspace}}\zlib\current ${{env.OPENSSL_EXTRA_BUILD_FLAGS}}    

        ${{env.OPENSSL_MAKE}}
      shell: cmd
